#Use `%in%` and `weekdays` to create a logical vector
#convert to `factor` and specify the `levels/labels`
imputedDF$wDay <- factor((weekdays(imputedDF$date) %in% weekdays1),
levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
#load lattice library
library(lattice)
#a lengthy approach, but was all I could think of
imputedDF_weekday <- group_by(filter(imputedDF, wDay == "weekday"), interval)
weekday_interval_total_steps <- summarize(imputedDF_weekday, mean_steps = mean(steps, na.rm = TRUE))
weekday_interval_total_steps$wDay <- "weekday"
imputedDF_weekend <- group_by(filter(imputedDF, wDay == "weekend"), interval)
weekend_interval_total_steps <- summarize(imputedDF_weekend, mean_steps = mean(steps, na.rm = TRUE))
weekend_interval_total_steps$wDay <- "weekend"
complete <- rbind(weekday_interval_total_steps,weekend_interval_total_steps)
xyplot(mean_steps ~ interval | wDay, data = complete, layout = c(1, 2), type="l")
format(total_mean, scientific=FALSE)
?match
activityDF <- read.csv("activity.csv", header=TRUE)
breaks=5)
sum_steps_day <- aggregate(steps~date,activityDF,sum, na.action=na.pass)
hist(sum_steps_day$steps,
main="Histogram for Total Steps in Day",
xlab="Total Daily Steps",
border="blue",
col="green",
ylim=c(0,40),
las=1,
breaks=5)
total_mean <- mean(sum_steps_day$steps, na.rm = TRUE)
total_median <- median(sum_steps_day$steps, na.rm = TRUE)
mean_interval_daily_steps <- aggregate(steps~interval, activityDF, mean)
plot(mean_interval_daily_steps$interval,
mean_interval_daily_steps$steps,
type="l",
main="Average Number of Steps Per 5-Minute Interval",
xlab="5-Minute Interval (0 through 2355)",
ylab="Average Number of Steps"
)
max_interval <- mean_interval_daily_steps$interval[which.max(mean_interval_daily_steps$steps)]
## Calculate and report the total number of missing values in the dataset
## (i.e. the total number of rows with 𝙽𝙰s)
sum(is.na(activityDF$steps))
matchesVector <- match(activityDF$interval, mean_interval_daily_steps$interval)]
matchesVector <- match(activityDF$interval, mean_interval_daily_steps$interval)
matchesVector
ifelse?
`
?
:
?ifelse
?transform
dt_fill_NA <- transform(activityDF, steps = ifelse(is.na(activityDF$steps), mean_interval_daily_steps$steps[match(activityDF$interval, mean_interval_daily_steps$interval)], activityDF$steps))
sessionInfo()
url <- c("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2")
?download.file
download.file(url, destfile = "StormData.csv.bz2")
getwd()
setwd("/Users/markkaufman/coursera/reproducible_research/CourseProject2")
getwd()
url <- c("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2")
download.file(url, destfile = "StormData.csv.bz2")
StormData <- read.csv(bzfile("StormData.csv.bz2"))
class(StormData)
head(StormData)
summary(StormData)
head(StormData)
?read.csv
tail(StormData)
str(StormData)
df <- StormData
?head
head(df$BGN_DATE, n = 20)
class(df$BGN_DATESTATE)
?class
class(df$BGN_DATE)
?as.Date
?strptime
df$BGN_DATE <- strptime(x$BGN_DATE, "%m/%d/%y %H:%M:%S")
df$BGN_DATE <- strptime(df$BGN_DATE, "%m/%d/%y %H:%M:%S")
class(df$BGN_DATE)
summary(df$BGN_DATE)
head(df$BGN_DATE, 100)
df <- StormData
head(df$BGN_DATE, 100)
df$BGN_DATE <- strptime(df$BGN_DATE, "%m/%d/%Y %H:%M:%S")
head(df$BGN_DATE, 100)
df$year <- format(df$BGN_DATE,"%Y")
head(df$year, n = 100)
?aggregate
fatalitiesByYeardf <- aggregate(fatalities~year,df,sum, na.action=na.pass)
fatalitiesByYeardf <- aggregate(FATALITIES~year,df,sum, na.action=na.pass)
fatalitiesByYeardf
fatalitiesByEventdf <- aggregate(FATALITIES~EVTYPE,df,sum, na.action=na.pass)
fatalitiesByEventdf
dim(df)
library(dplyr)
library(nycflights13)
install.packages("nycflights13")
library(nycflights13)
head(flights)
by_tailnum <- group_by(flights, tailnum)
head(by_tailnum)
dim(by_tailnum)
dim(flights)
delay <- summarise(by_tailnum,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE))
dim(delay)
head(delay)
by_year <- group_by(df, year, EVTYPE)
df_year_sum <- summarise(by_year)
df <- StormData
df$year <- format(strptime(df$BGN_DATE, "%m/%d/%Y %H:%M:%S"),"%Y")
by_year <- group_by(df, year, EVTYPE)
df_year_sum <- summarise(by_year)
dim(df_year_sum)
head(df_year_sum)
head(df_year_sum, n = 100)
df_year_sum <- summarise(by_year, count = n(), fatalities = sum(FATALITIES))
head(df_year_sum, n = 20)
head(StormData)
df_year_sum <- summarise(by_year, count = n(), fatalities = sum(FATALITIES), injuries = sum(INJURIES))
head(StormData)
head(df_year_sum, n = 20)
df_year_sum <- summarise(by_year, count = n(), fatalities = sum(FATALITIES), injuries = sum(INJURIES), combined = fatalities + injuries)
head(df_year_sum, n = 20)
by_EVTYPE <- group_by(by_year, EVTYPE)
by_EVTYPE_sum <- summarise(by_EVTYPE, combined = sum(combined))
by_EVTYPE <- group_by(df_year_sum, EVTYPE)
by_EVTYPE_sum <- summarise(by_EVTYPE, combined = sum(combined))
by_EVTYPE_sum
arrange(by_EVTYPE_sum, desc(combined))
by_EVTYPE_sum <- summarise(by_EVTYPE, combined = sum(combined), combined_avg = mean(combined))
arrange(by_EVTYPE_sum, desc(combined))
by_EVTYPE_sum <- summarise(by_EVTYPE, combined_total = sum(combined), combined_avg = mean(combined))
arrange(by_EVTYPE_sum, desc(combined))
arrange(by_EVTYPE_sum, desc(combined_total))
head(fatalitiesByEventdf)
tail(fatalitiesByEventdf)
arrange(fatalitiesByEventdf, desc(FATALITIES))
arrange(by_EVTYPE_sum, desc(combined_total))
descList <- arrange(by_EVTYPE_sum, desc(combined_total))
descList
descList(tail, n=25)
tail(descList, n = 25)
df_year_sum
hear(df_year_sum, n=20)
head(df_year_sum, n=20)
head(StormData, n = 25)
fatalitiesByYeardf
df$combined <- df$INJURIES + df$FATALITIES
aggregate(combined~year,df,sum, na.action=na.pass)
aggregate(combined~EVTYPE,df,sum, na.action=na.pass)
df <- filter(df, combined > 10)
?unique
?length
?unique
unique(df$EVTYPE)
df <- filter(df, combined > 10 | year > 1995)
df <- filter(df, combined > 10 & year > 1995)
?count
```{r}
events_recorded <- count(df, 'EVTYPE')
# view most popular EVTYPEs
head(events_recorded[order(-events_recorded$freq),],25)
```
events_recorded
events_recorded <- count(df$EVTYPE)
events_recorded <- count(EVTYPE)
events_recorded <- count(df, EVTYPE)
events_recorded
head(events_recorded[order(-events_recorded$freq),],25)
arrange(events_recorded, desc(n)
)
View(events_recorded)
?gsub
?"matrix"
tdf <- matrix(data = c("COLD AND SNOW", "EXTREME COLD", "FOG", "HEAT WAVE"), nrow=2, ncol=2 )
tdf
class(tdf)
?data_frame
tdf <- data.frame(data = c("COLD AND SNOW", "EXTREME COLD", "FOG", "HEAT WAVE"), nrow=2, ncol=2 )
class(tdf)
tdf
tdf <- data.frame(EVTYPE = c("COLD AND SNOW", "EXTREME COLD", "FOG", "HEAT WAVE"))
tdf
tdf$EVTYPE <- gsub("COLD AND SNOW", "COLD", tdf$EVTYPE)
tdf
library(stringr)
str_c("Letter: ", letters)
str_c("Letter", letters, sep = ": ")
str_c(letters, " is for", "...")
str_c(letters[-26], " comes before ", letters[-1])
fruits <- c("one apple", "two pears", "three bananas")
str_c(fruits, collapse = "---")
str_replace_all(str_c(fruits, collapse = "---"),                c("one" = 1, "two" = 2, "three" = 3))
str_replace_all(str_c(fruits, collapse = "---"), c("one" = 1, "two" = 2, "three" = 3))
dtf
tdf
str_replace_all(tdf, c("COLD" = "VERY COLD", "FOG" = "DENSE FOG"))
tdf
tdf$EVTYPE <- str_replace_all(tdf$EVTYPE, c("COLD" = "VERY COLD", "FOG" = "DENSE FOG"))
tdf
df$EVTYPE <- str_replace_all(tdf$EVTYPE,c("COLD"AND"SNOW" = "COLD", "EXTREME"COLD" = "EXTREME"COLD/WIND"CHILL", "FOG" = "DENSE"FOG", "HEAT"WAVE" = "HEAT", "HEAVY"SURF/HIGH"SURF" = "HIGH"SURF", "HURRICANE" = "HURRICANT/TYPHOON", "RIP"CURRENTS" = "RIP"CURRENT", "SNOW"SQUALL" = "HEAVY"SNOW", "STORM"SURGE" = "SNOW"SURGE/TIDE", "TSTM"WIND" = "THUNDERSTORM"WIND", "TSTM"WIND/HAIL" = "THUNDERSTORP"WIND", "UNSEASONABLY"WARM" = "HEAT", "URBAN/SML"STREAM"FLD" = "FLOOD", "WILD/FOREST"FIRE" = "WILDFIRE", "WIND" = "HIGH"WIND", "WINTER"WEATHER"MIX" = "WINTER"WEATHER", "WINTER"WEATHER/MIX" = "WINTER"WEATHER", "WINTRY"MIX" = "WINTER"WEATHER"))
df$EVTYPE <- str_replace_all(tdf$EVTYPE,c("COLD AND SNOW" = "COLD", "EXTREME COLD" = "EXTREME COLD/WIND CHILL", "FOG" = "DENSE FOG", "HEAT WAVE" = "HEAT", "HEAVY SURF/HIGH SURF" = "HIGH SURF", "HURRICANE" = "HURRICANT/TYPHOON", "RIP CURRENTS" = "RIP CURRENT", "SNOW SQUALL" = "HEAVY SNOW", "STORM SURGE" = "SNOW SURGE/TIDE", "TSTM WIND" = "THUNDERSTORM WIND", "TSTM WIND/HAIL" = "THUNDERSTORP WIND", "UNSEASONABLY WARM" = "HEAT", "URBAN/SML STREAM FLD" = "FLOOD", "WILD/FOREST FIRE" = "WILDFIRE", "WIND" = "HIGH WIND", "WINTER WEATHER MIX" = "WINTER WEATHER", "WINTER WEATHER/MIX" = "WINTER WEATHER", "WINTRY MIX" = "WINTER WEATHER"))
df$EVTYPE <- str_replace_all(df$EVTYPE,c("COLD AND SNOW" = "COLD", "EXTREME COLD" = "EXTREME COLD/WIND CHILL", "FOG" = "DENSE FOG", "HEAT WAVE" = "HEAT", "HEAVY SURF/HIGH SURF" = "HIGH SURF", "HURRICANE" = "HURRICANT/TYPHOON", "RIP CURRENTS" = "RIP CURRENT", "SNOW SQUALL" = "HEAVY SNOW", "STORM SURGE" = "SNOW SURGE/TIDE", "TSTM WIND" = "THUNDERSTORM WIND", "TSTM WIND/HAIL" = "THUNDERSTORP WIND", "UNSEASONABLY WARM" = "HEAT", "URBAN/SML STREAM FLD" = "FLOOD", "WILD/FOREST FIRE" = "WILDFIRE", "WIND" = "HIGH WIND", "WINTER WEATHER MIX" = "WINTER WEATHER", "WINTER WEATHER/MIX" = "WINTER WEATHER", "WINTRY MIX" = "WINTER WEATHER"))
new_events_recorded <- count(df, EVTYPE)
View(new_events_recorded)
?if
?ifelse
?data.frame
data.frame(tdf) <- EVTYPE = c("COLD AND SNOW", "EXTREME COLD", "FOG", "DENSE FOG")
tdf <- (EVTYPE = c("COLD AND SNOW", "EXTREME COLD", "FOG", "DENSE FOG")
)
class(tdf)
tdf <- data.frame(EVTYPE = c("COLD AND SNOW", "EXTREME COLD", "FOG", "DENSE FOG")
)
View(tdf)
conversion_list <- data.frame(orig = c("COLD AND SNOW", "EXTREME COLD", "FOG"), official = c("COLD", "EXTREME COLD/WIND CHILL", "DENSE FOG")
)
View(conversion_list)
View(tdf)
tdf$EVTYPE <- ifelse(tdf$EVTYPE == conversion_list$orig, conversion_list$official, df$EVTYPE)
conversion_list$orig
conversion_list[,$orig]
conversion_list[,]
conversion_list[,1]
library(dplyr)
url <- c("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2")
download.file(url, destfile = "StormData.csv.bz2")
df <- read.csv(bzfile("StormData.csv.bz2"))
# to backup when I screw things up
df_backup <- df
df$EVTYPE <- as.character(df$EVTYPE)
df$EVTYPE <- toupper(df$EVTYPE)
df$year <- format(strptime(df$BGN_DATE, "%m/%d/%Y %H:%M:%S"),"%Y")
df$combined <- df$INJURIES + df$FATALITIES
df$PROPDMGEXP_multi[df$PROPDMGEXP == "K"] <- 1000
df$PROPDMGEXP_multi[df$PROPDMGEXP == "M"] <- 1000000
df$PROPDMGEXP_multi[df$PROPDMGEXP == ""] <- 0
df$CROPDMGEXP_multi[df$CROPDMGEXP == "K"] <- 1000
df$CROPDMGEXP_multi[df$CROPDMGEXP == "M"] <- 1000000
df$CROPDMGEXP_multi[df$CROPDMGEXP == ""] <- 0
as.numeric(df$PROPDMG)
as.numeric(df$CROPDMG)
df$total_damage <- df$PROPDMG * df$PROPDMGEXP_multi + df$CROPDMG * df$CROPDMGEXP_multi
df_econ <- filter(df, total_damage > 0 & year > 1995)
events_recordedA <- count(df_econ, EVTYPE)
# view most popular EVTYPEs
arrange(events_recordedA, desc(n))
by_EVTYPE <- group_by(df_econ, EVTYPE)
View(df_econ)
by_EVTYPE_total_cost <- summarise(by_EVTYPE, total_cost = sum(total_damage))
View(by_EVTYPE_total_cost)
audit <- filter(df_econ, total_damage)
```{r}
audit <- filter(df_econ, EVTYPE == "HIGH SURF ADVISORY")
View(audit)
audit <- filter(df_econ, EVTYPE == "HIGH SURF ADVISORY")
audit <- filter(df, EVTYPE == "HIGH SURF ADVISORY")
View(audit)
audit <- filter(df, EVTYPE == "DOWNBURST")
audit <- filter(df, EVTYPE == "FLASH FLOOD")
audit <- filter(df, EVTYPE == "HIGH SURF ADVISORY")
audit <- filter(df_econ, EVTYPE == "HIGH SURF ADVISORY")
audit <- filter(by_EVTYPE, EVTYPE == "HIGH SURF ADVISORY")
by_EVTYPE_total_cost <- summarise(by_EVTYPE, total_cost = sum(total_damage))
View(by_EVTYPE_total_cost)
df_econ <- filter(df, year > 1995)
events_recordedA <- count(df_econ, EVTYPE)
# view most popular EVTYPEs
arrange(events_recordedA, desc(n))
by_EVTYPE <- group_by(df_econ, EVTYPE)
audit <- filter(by_EVTYPE, EVTYPE == "HIGH SURF ADVISORY")
by_EVTYPE_total_cost <- summarise(by_EVTYPE, total_cost = sum(total_damage))
class(by_EVTYPE$total_damage)
class(by_EVTYPE_total_cost$total_cost)
audit <- filter(by_EVTYPE, total_damage == 200000)
audit2 <- filter(ds, REFNUM == 448421)
audit2 <- filter(df, REFNUM == 448421)
View(audit2)
df$PROPDMGEXP_multi[df$PROPDMGEXP == "K"] <- 1000
audit2 <- filter(df, REFNUM == 448421)
audit2 <- filter(df, EVTYPE == "HIGH SURF ADVISORY")
audit2 <- filter(df, COUNTYNAME == "TUTUILA")
value <- df$EVTYPE[REFNUM == 448421]
value <- df$EVTYPE[df$REFNUM == 448421]
value
library(ggplot2)
top10econ <- arrange(by_EVTYPE_total_cost, desc(total_cost))[1:10]
View(top10econ)
arrange(by_EVTYPE_total_cost, desc(total_cost))[1:10]
arrange(by_EVTYPE_total_cost, desc(total_cost))
top10econ <- arrange(by_EVTYPE_total_cost, desc(total_cost))
View(top10econ)
top10econ <- top10econ[1:10,]
top10econ <- arrange(by_EVTYPE_total_cost, desc(total_cost))[1:10,]
top10econ + geom_bar()
c <- ggplot(top10econ)
c + geom_bar()
?ggplot
c <- ggplot(top10econ, aes(EVTYPE))
c + geom_bar()
c <- ggplot(top10econ, aes(EVTYPE))
c + geom_bar(stat = "identity")
c <- ggplot(top10econ, aes(EVTYPE))
c + geom_bar(stat = "identity")
c <- ggplot(top10econ, aes(x = EVTYPE, y = total_cost))
c + geom_bar(stat = "identity")
"ggplot"
?ggplot
c <- ggplot(top10econ, aes(x = EVTYPE, y = total_cost))
c + geom_bar(stat = "identity") + labs(title = "Top 10 Most Economically Devasting U.S. Storm Events (1996-200?)")
c + geom_bar(stat = "identity") + labs(title = "Top 10 Most Economically Harmful U.S. Storm Event Types (1996-200?)", x = "Event Type")
c + geom_bar(stat = "identity") + labs(title = "Top 10 Most Economically Harmful U.S. Storm Event Types (1996-200?)", x = "Event Type", y = "Economic Impact (U.S. Dollars)")
c + geom_bar(stat = "identity") + labs(title = "Top 10 Most Economically Harmful U.S. Storm Event Types (1996-200?)", x = "Event Type", y = "Economic Impact (U.S. Dollars)") + theme(axis.text.x = element_text(angle = 90, hjust = 1)
c + geom_bar(stat = "identity") + labs(title = "Top 10 Most Economically Harmful U.S. Storm Event Types (1996-200?)", x = "Event Type", y = "Economic Impact (U.S. Dollars)") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
c + geom_bar(stat = "identity") + labs(title = "Top 10 Most Economically Harmful U.S. Storm Event Types (1996-200?)", x = "Event Type", y = "Economic Impact (U.S. Dollars)")
c + geom_bar(stat = "identity") + labs(title = "Top 10 Most Economically Harmful U.S. Storm Event Types (1996-200?)", x = "Event Type", y = "Economic Impact (U.S. Dollars)") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
option(scipen=3)
options(scipen=3)
c + geom_bar(stat = "identity") + labs(title = "Top 10 Most Economically Harmful U.S. Storm Event Types (1996-200?)", x = "Event Type", y = "Economic Impact (U.S. Dollars)") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
options(scipen=999)
c + geom_bar(stat = "identity") + labs(title = "Top 10 Most Economically Harmful U.S. Storm Event Types (1996-200?)", x = "Event Type", y = "Economic Impact (U.S. Dollars)") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
top10econ$total_cost <- top10econ$total_cost/10^6
c + geom_bar(stat = "identity") + labs(title = "Top 10 Most Economically Harmful U.S. Storm Event Types (1996-200?)", x = "Event Type", y = "Economic Impact (Millions U.S. Dollars)") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
c <- ggplot(top10econ, aes(x = EVTYPE, y = total_cost))
c + geom_bar(stat = "identity") + labs(title = "Top 10 Most Economically Harmful U.S. Storm Event Types (1996-200?)", x = "Event Type", y = "Economic Impact (Millions U.S. Dollars)") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
top10econ$total_cost <- top10econ$total_cost/10^9
c <- ggplot(top10econ, aes(x = EVTYPE, y = total_cost))
c + geom_bar(stat = "identity") + labs(title = "Top 10 Most Economically Harmful U.S. Storm Event Types (1996-200?)", x = "Event Type", y = "Economic Impact (Billions U.S. Dollars)") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
options(scipen=1)
c <- ggplot(top10econ, aes(x = EVTYPE, y = total_cost))
c + geom_bar(stat = "identity") + labs(title = "Top 10 Most Economically Harmful U.S. Storm Event Types (1996-200?)", x = "Event Type", y = "Economic Impact (Billions U.S. Dollars)") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
top10econ <- arrange(by_EVTYPE_total_cost, desc(total_cost))[1:10,]
top10econ$total_cost <- top10econ$total_cost/10^9
c <- ggplot(top10econ, aes(x = EVTYPE, y = total_cost))
c + geom_bar(stat = "identity") + labs(title = "Top 10 Most Economically Harmful U.S. Storm Event Types (1996-200?)", x = "Event Type", y = "Economic Impact (Billions U.S. Dollars)") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
by_PROPDMGEXP <- group_by(df, PROPDMGEXP)
PROPDMGEXP_counts <- summarise(by_PROPDMGEXP, count = n())
View(PROPDMGEXP_counts)
audit <- filter(df, PROPDMGEXP == "-")
View(audit)
audit <- filter(df, PROPDMGEXP == "?")
audit <- filter(df, PROPDMGEXP == "+")
df$PROPDMGEXP_multi[df$PROPDMGEXP == "" | df$PROPDMGEXP == "-" | df$PROPDMGEXP == "?"] <- 1
by_PROPDMGEXP <- group_by(df, PROPDMGEXP)
PROPDMGEXP_counts <- summarise(by_PROPDMGEXP, count = n())
audit <- filter(df, PROPDMGEXP == "+")
df$PROPDMGEXP_multi[df$PROPDMGEXP == "" | df$PROPDMGEXP == "-" | df$PROPDMGEXP == "?"] <- 1
audit <- filter(df, PROPDMGEXP == "-")
audit <- filter(df, PROPDMGEXP == "?")
audit <- filter(df, PROPDMGEXP == "")
df$PROPDMGEXP_multi[df$PROPDMGEXP == "" | df$PROPDMGEXP == "-" | df$PROPDMGEXP == "?" | df$PROPDMGEXP == "+"] <- 1
df$PROPDMGEXP_multi[df$PROPDMGEXP == "" | df$PROPDMGEXP == "-" | df$PROPDMGEXP == "?" | df$PROPDMGEXP == "+"] <- 1
df$PROPDMGEXP_multi[df$PROPDMGEXP == "0"] <- 1
df$PROPDMGEXP_multi[df$PROPDMGEXP == "1"] <- 10
df$PROPDMGEXP_multi[df$PROPDMGEXP == "2"] <- 10^2
df$PROPDMGEXP_multi[df$PROPDMGEXP == "3"] <- 10^3
df$PROPDMGEXP_multi[df$PROPDMGEXP == "4"] <- 10^4
df$PROPDMGEXP_multi[df$PROPDMGEXP == "5"] <- 10^5
df$PROPDMGEXP_multi[df$PROPDMGEXP == "6"] <- 10^6
df$PROPDMGEXP_multi[df$PROPDMGEXP == "7"] <- 10^7
df$PROPDMGEXP_multi[df$PROPDMGEXP == "8"] <- 10^8
df$PROPDMGEXP_multi[df$PROPDMGEXP == "9"] <- 10^9
df$PROPDMGEXP_multi[df$PROPDMGEXP == "K"] <- 1000
df$PROPDMGEXP_multi[df$PROPDMGEXP == "M"] <- 1000000
df$CROPDMGEXP_multi[df$CROPDMGEXP == "" | df$CROPDMGEXP == "-" | df$CROPDMGEXP == "?" | df$CROPDMGEXP == "+"] <- 1
df$CROPDMGEXP_multi[df$CROPDMGEXP == "0"] <- 1
df$CROPDMGEXP_multi[df$CROPDMGEXP == "1"] <- 10
df$CROPDMGEXP_multi[df$CROPDMGEXP == "2"] <- 10^2
df$CROPDMGEXP_multi[df$CROPDMGEXP == "3"] <- 10^3
df$CROPDMGEXP_multi[df$CROPDMGEXP == "4"] <- 10^4
df$CROPDMGEXP_multi[df$CROPDMGEXP == "5"] <- 10^5
df$CROPDMGEXP_multi[df$CROPDMGEXP == "6"] <- 10^6
df$CROPDMGEXP_multi[df$CROPDMGEXP == "7"] <- 10^7
df$CROPDMGEXP_multi[df$CROPDMGEXP == "8"] <- 10^8
df$CROPDMGEXP_multi[df$CROPDMGEXP == "9"] <- 10^9
df$CROPDMGEXP_multi[df$CROPDMGEXP == "K"] <- 1000
df$CROPDMGEXP_multi[df$CROPDMGEXP == "M"] <- 1000000
as.numeric(df$PROPDMG)
as.numeric(df$CROPDMG)
df$total_damage <- df$PROPDMG * df$PROPDMGEXP_multi + df$CROPDMG * df$CROPDMGEXP_multi
df_econ <- filter(df, total_damage > 0 & year > 1995)
events_recordedA <- count(df_econ, EVTYPE)
# view most popular EVTYPEs
arrange(events_recordedA, desc(n))
by_EVTYPE <- group_by(df_econ, EVTYPE)
by_EVTYPE_total_cost <- summarise(by_EVTYPE, total_cost = sum(total_damage))
top10econ <- arrange(by_EVTYPE_total_cost, desc(total_cost))[1:10,]
top10econ$total_cost <- top10econ$total_cost/10^9
c <- ggplot(top10econ, aes(x = EVTYPE, y = total_cost))
c + geom_bar(stat = "identity") + labs(title = "Top 10 Most Economically Harmful U.S. Storm Event Types (1996-200?)", x = "Event Type", y = "Economic Impact (Billions U.S. Dollars)") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
df$PROPDMGEXP <- as.character(df$PROPDMGEXP)
df$PROPDMGEXP <- toupper(df$PROPDMGEXP)
df$CROPDMGEXP <- as.character(df$CROPDMGEXP)
df$CROPDMGEXP <- toupper(df$CROPDMGEXP)
by_PROPDMGEXP <- group_by(df, PROPDMGEXP)
PROPDMGEXP_counts <- summarise(by_PROPDMGEXP, count = n())
# Capitalize where applicable to EXP values
df$PROPDMGEXP <- as.character(df$PROPDMGEXP)
df$PROPDMGEXP <- toupper(df$PROPDMGEXP)
df$CROPDMGEXP <- as.character(df$CROPDMGEXP)
df$CROPDMGEXP <- toupper(df$CROPDMGEXP)
df$PROPDMGEXP_multi[df$PROPDMGEXP == "" | df$PROPDMGEXP == "-" | df$PROPDMGEXP == "?" | df$PROPDMGEXP == "+"] <- 1
df$PROPDMGEXP_multi[df$PROPDMGEXP == "0"] <- 1
df$PROPDMGEXP_multi[df$PROPDMGEXP == "1"] <- 10
df$PROPDMGEXP_multi[df$PROPDMGEXP == "2"] <- 10^2
df$PROPDMGEXP_multi[df$PROPDMGEXP == "3"] <- 10^3
df$PROPDMGEXP_multi[df$PROPDMGEXP == "4"] <- 10^4
df$PROPDMGEXP_multi[df$PROPDMGEXP == "5"] <- 10^5
df$PROPDMGEXP_multi[df$PROPDMGEXP == "6"] <- 10^6
df$PROPDMGEXP_multi[df$PROPDMGEXP == "7"] <- 10^7
df$PROPDMGEXP_multi[df$PROPDMGEXP == "8"] <- 10^8
df$PROPDMGEXP_multi[df$PROPDMGEXP == "9"] <- 10^9
df$PROPDMGEXP_multi[df$PROPDMGEXP == "H"] <- 100
df$PROPDMGEXP_multi[df$PROPDMGEXP == "K"] <- 1000
df$PROPDMGEXP_multi[df$PROPDMGEXP == "M"] <- 1000000
df$CROPDMGEXP_multi[df$CROPDMGEXP == "" | df$CROPDMGEXP == "-" | df$CROPDMGEXP == "?" | df$CROPDMGEXP == "+"] <- 1
df$CROPDMGEXP_multi[df$CROPDMGEXP == "0"] <- 1
df$CROPDMGEXP_multi[df$CROPDMGEXP == "1"] <- 10
df$CROPDMGEXP_multi[df$CROPDMGEXP == "2"] <- 10^2
df$CROPDMGEXP_multi[df$CROPDMGEXP == "3"] <- 10^3
df$CROPDMGEXP_multi[df$CROPDMGEXP == "4"] <- 10^4
df$CROPDMGEXP_multi[df$CROPDMGEXP == "5"] <- 10^5
df$CROPDMGEXP_multi[df$CROPDMGEXP == "6"] <- 10^6
df$CROPDMGEXP_multi[df$CROPDMGEXP == "7"] <- 10^7
df$CROPDMGEXP_multi[df$CROPDMGEXP == "8"] <- 10^8
df$CROPDMGEXP_multi[df$CROPDMGEXP == "9"] <- 10^9
df$CROPDMGEXP_multi[df$CROPDMGEXP == "H"] <- 1000
df$CROPDMGEXP_multi[df$CROPDMGEXP == "K"] <- 1000
df$CROPDMGEXP_multi[df$CROPDMGEXP == "M"] <- 1000000
as.numeric(df$PROPDMG)
as.numeric(df$CROPDMG)
df$total_damage <- df$PROPDMG * df$PROPDMGEXP_multi + df$CROPDMG * df$CROPDMGEXP_multi
df_econ <- filter(df, total_damage > 0 & year > 1995)
events_recordedA <- count(df_econ, EVTYPE)
# view most popular EVTYPEs
arrange(events_recordedA, desc(n))
by_EVTYPE <- group_by(df_econ, EVTYPE)
by_EVTYPE_total_cost <- summarise(by_EVTYPE, total_cost = sum(total_damage))
top10econ <- arrange(by_EVTYPE_total_cost, desc(total_cost))[1:10,]
top10econ$total_cost <- top10econ$total_cost/10^9
c <- ggplot(top10econ, aes(x = EVTYPE, y = total_cost))
c + geom_bar(stat = "identity") + labs(title = "Top 10 Most Economically Harmful U.S. Storm Event Types (1996-200?)", x = "Event Type", y = "Economic Impact (Billions U.S. Dollars)") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
by_EVTYPE_total_cost <- summarise(by_EVTYPE, total_cost = sum(total_damage), injuries_and_death = sum(combined))
View(by_EVTYPE_total_cost)
audit <- filter(df, EVTYPE == "HEAT WAVE")
View(audit)
audit <- filter(df_backup, EVTYPE == "HEAT WAVE")
View(audit)
top10injuries <- arrange(by_EVTYPE_total_cost, desc(injuries_and_death))[1:10,]
View(top10injuries)
c <- ggplot(top10injuries, aes(x = EVTYPE, y = injuries_and_death))
c + geom_bar(stat = "identity") + labs(title = "Top 10 U.S. Storm Event Types Causing Most Human Health Harm (1996-200?)", x = "Event Type", y = "Number of Deaths and Injuries") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
by_year <- group_by(df, year, EVTYPE)
df_year_summary <- summarise(by_year, count = n(), fatalities = sum(FATALITIES), injuries = sum(INJURIES), combined = fatalities + injuries, avg_prop_dmg = mean(total_damage))
View(df_year_summary)
by_EVTYPE_total_cost <- summarise(by_EVTYPE, total_cost = sum(total_damage), injuries_and_death = sum(combined), count = n())
by_EVTYPE_total_cost$avg_cost_per_event <- by_EVTYPE_total_cost$total_cost / by_EVTYPE_total_cost$count
by_EVTYPE_total_cost$avg_injuries_and_death_per_event <- by_EVTYPE_total_cost$injuries_and_death / by_EVTYPE_total_cost$count
?as.integer
by_EVTYPE_total_cost$avg_cost_per_event <- as.integer(by_EVTYPE_total_cost$total_cost / by_EVTYPE_total_cost$count)
by_EVTYPE_total_cost$avg_injuries_and_death_per_event <- as.integer(by_EVTYPE_total_cost$injuries_and_death / by_EVTYPE_total_cost$count)
by_EVTYPE_total_cost <- summarise(by_EVTYPE, total_cost = sum(total_damage), INJURIES = sum(INJURIES), FATALATIES = sum(FATALATIES), injuries_and_death = sum(combined), count = n())
by_EVTYPE_total_cost <- summarise(by_EVTYPE, total_cost = sum(total_damage), INJURIES = sum(INJURIES), FATALITIES = sum(FATALITIES), injuries_and_death = sum(combined), count = n())
top10injuries_and_death <- arrange(by_EVTYPE_total_cost, desc(injuries_and_death))[1:10,]
c <- ggplot(top10injuries_and_death, aes(x = EVTYPE, y = injuries_and_death))
c + geom_bar(stat = "identity") + labs(title = "Top 10 U.S. Storm Event Types Causing Most Human Health Harm (1996-200?)", x = "Event Type", y = "Number of Deaths and Injuries") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
top10injuries <- arrange(by_EVTYPE_total_cost, desc(INJURIES))[1:10,]
View(top10injuries)
View(top10injuries_and_death)
top10injuries <- arrange(by_EVTYPE_total_cost, desc(INJURIES))[1:10,]
c <- ggplot(top10injuries, aes(x = EVTYPE, y = INJURIES))
c + geom_bar(stat = "identity") + labs(title = "Top 10 U.S. Storm Event Types Causing Most Human Health Harm (1996-200?)", x = "Event Type", y = "Number of Deaths and Injuries") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
top10fatalities <- arrange(by_EVTYPE_total_cost, desc(FATALITIES))[1:10,]
c <- ggplot(top10fatalities, aes(x = EVTYPE, y = FATALITIES))
c + geom_bar(stat = "identity") + labs(title = "Top 10 U.S. Storm Event Types Causing Most Human Health Harm (1996-200?)", x = "Event Type", y = "Number of Fatalities") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
by_EVTYPE_total_cost$avg_cost_per_event <- as.integer(by_EVTYPE_total_cost$total_cost / by_EVTYPE_total_cost$count)
View(top10econ)
audit3 <- filter(by_EVTYPE_total_cost, EVTYPE == top10econ$EVTYPE)
View(audit3)
audit3 <- filter(by_EVTYPE_total_cost, by_EVTYPE_total_cost$EVTYPE == top10econ$EVTYPE)
audit3 <- filter(by_EVTYPE_total_cost, by_EVTYPE_total_cost$EVTYPE = top10econ$EVTYPE)
audit4 <- by_EVTYPE_total_cost$EVTYPE == top10econ$EVTYPE
audit4 <- intersect(by_EVTYPE_total_cost$EVTYPE,top10econ$EVTYPE)
?in
audit3 <- filter(by_EVTYPE_total_cost, by_EVTYPE_total_cost$EVTYPE%in%audit4)
View(audit3)
audit3 <- filter(by_EVTYPE_total_cost, by_EVTYPE_total_cost$EVTYPE%in%intersect(by_EVTYPE_total_cost$EVTYPE,top10econ$EVTYPE))
audit4 <- filter(by_EVTYPE_total_cost, by_EVTYPE_total_cost$EVTYPE%in%top10econ$EVTYPE)
View(audit4)
View(audit4)
c <- ggplot(filter(by_EVTYPE_total_cost, by_EVTYPE_total_cost$EVTYPE%in%top10econ$EVTYPE), aes(x = EVTYPE, y = avgcostperevent))
c + geom_bar(stat = "identity") + labs(title = "Top 10 Most Economically Harmful U.S. Storm Event Types (1996-2011)", x = "Event Type", y = "Average Economic Impact Per Recorded Event (Billions U.S. Dollars)") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
c <- ggplot(filter(by_EVTYPE_total_cost, by_EVTYPE_total_cost$EVTYPE%in%top10econ$EVTYPE), aes(x = EVTYPE, y = avg_cost_per_event))
c + geom_bar(stat = "identity") + labs(title = "Top 10 Most Economically Harmful U.S. Storm Event Types (1996-2011)", x = "Event Type", y = "Average Economic Impact Per Recorded Event (Billions U.S. Dollars)") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
c <- ggplot(filter(by_EVTYPE_total_cost, by_EVTYPE_total_cost$EVTYPE%in%top10econ$EVTYPE), aes(x = EVTYPE, y = avg_cost_per_event/10^9))
c + geom_bar(stat = "identity") + labs(title = "Top 10 Most Economically Harmful U.S. Storm Event Types (1996-2011)", x = "Event Type", y = "Average Economic Impact Per Recorded Event (Billions U.S. Dollars)") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
c <- ggplot(filter(by_EVTYPE_total_cost, by_EVTYPE_total_cost$EVTYPE%in%top10econ$EVTYPE), aes(x = EVTYPE, y = avg_cost_per_event/10^6))
c + geom_bar(stat = "identity") + labs(title = "Top 10 Most Economically Harmful U.S. Storm Event Types (1996-2011)", x = "Event Type", y = "Average Economic Impact Per Recorded Event (Millions U.S. Dollars)") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
audit <- filter(df, total_damage == 0 & INUJURIES > 1)
audit <- filter(df, total_damage == 0 & INJURIES > 1)
View(audit)
df <- df_backup
by_PROPDMGEXP <- group_by(df, PROPDMGEXP)
PROPDMGEXP_counts <- summarise(by_PROPDMGEXP, count = n())
View(PROPDMGEXP_counts)
View(PROPDMGEXP_counts)
df$EVTYPE <- as.character(df$EVTYPE)
df$EVTYPE <- toupper(df$EVTYPE)
